<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="MoMoney.Views.Settings.LoggingPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:converters="clr-namespace:MoMoney.Core.Converters;assembly=MoMoney.Core"
    xmlns:models="clr-namespace:MoMoney.Core.Models;assembly=MoMoney.Core"
    xmlns:selectors="clr-namespace:MoMoney.Selectors"
    xmlns:sf="clr-namespace:Syncfusion.Maui.ListView;assembly=Syncfusion.Maui.ListView"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodel="clr-namespace:MoMoney.Core.ViewModels.Settings;assembly=MoMoney.Core"
    Title="Logs"
    x:DataType="viewmodel:LoggingViewModel">
    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding ToggleExpandCommand}" IconImageSource="{AppThemeBinding Light='filter_black.svg', Dark='filter_white.svg'}" />
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>

        <converters:NoneToVisibleConverter x:Key="NoneToVisible" />
        <converters:NullToVisibleConverter x:Key="NullToVisible" />

        <!--  small item template  -->
        <DataTemplate x:Key="Small" x:DataType="models:Log">
            <Grid
                Padding="10,3"
                BackgroundColor="{AppThemeBinding Light={StaticResource Gray100},
                                                  Dark={StaticResource Gray700}}"
                RowDefinitions="*,*">
                <Grid.Resources>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray300}}" />
                    </Style>
                </Grid.Resources>
                <Label
                    HorizontalOptions="Start"
                    MinimumWidthRequest="170"
                    Text="{Binding Message}"
                    TextColor="{AppThemeBinding Light={StaticResource Black},
                                                Dark={StaticResource White}}" />
                <Label
                    Grid.Row="1"
                    HorizontalOptions="Start"
                    MinimumWidthRequest="100"
                    Text="{Binding Level}" />
                <Label
                    Grid.Row="1"
                    HorizontalOptions="End"
                    HorizontalTextAlignment="End"
                    MinimumWidthRequest="120"
                    Text="{Binding Timestamp, StringFormat='{0:yy-MM-dd HH:mm:ss}'}" />
            </Grid>
        </DataTemplate>

        <!--  large item template  -->
        <DataTemplate x:Key="Large" x:DataType="models:Log">
            <Grid
                Padding="10,5"
                BackgroundColor="{AppThemeBinding Light={StaticResource Gray100},
                                                  Dark={StaticResource Gray700}}"
                RowDefinitions="*,*,*">
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding Path=OpenPopupCommand, Source={RelativeSource AncestorType={x:Type viewmodel:LoggingViewModel}}}" CommandParameter="{Binding LogId}" />
                </Grid.GestureRecognizers>
                <Grid.Resources>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray300}}" />
                    </Style>
                </Grid.Resources>
                <Label
                    HorizontalOptions="Start"
                    MinimumWidthRequest="170"
                    Text="{Binding ClassName}" />
                <Label
                    HorizontalOptions="End"
                    HorizontalTextAlignment="End"
                    MinimumWidthRequest="170"
                    Text="{Binding ExceptionType}" />
                <Label
                    Grid.Row="1"
                    HorizontalOptions="Start"
                    Text="{Binding Message}"
                    TextColor="{AppThemeBinding Light={StaticResource Black},
                                                Dark={StaticResource White}}" />
                <Label
                    Grid.Row="2"
                    HorizontalOptions="Start"
                    MinimumWidthRequest="100"
                    Text="{Binding Level}" />
                <Label
                    Grid.Row="2"
                    HorizontalOptions="End"
                    HorizontalTextAlignment="End"
                    MinimumWidthRequest="120"
                    Text="{Binding Timestamp, StringFormat='{0:yy-MM-dd HH:mm:ss}'}" />
            </Grid>
        </DataTemplate>

        <selectors:LogDataTemplateSelector
            x:Key="LogDataTemplateSelector"
            LargeTemplate="{StaticResource Large}"
            ListView="{x:Reference listview}"
            SmallTemplate="{StaticResource Small}"
            Switch="{x:Reference swTileSize}" />

    </ContentPage.Resources>

    <!--  content  -->
    <Grid Margin="10,5,10,10" RowDefinitions="Auto,*">
        <toolkit:Expander IsExpanded="{Binding IsExpanded}">
            <VerticalStackLayout Padding="0,5" Spacing="5">
                <VerticalStackLayout.Resources>
                    <Style TargetType="{Type Frame}">
                        <Setter Property="Padding" Value="10,2" />
                        <Setter Property="HeightRequest" Value="45" />
                        <Setter Property="HasShadow" Value="False" />
                        <Setter Property="CornerRadius" Value="10" />
                        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray700}}" />
                    </Style>
                    <Style TargetType="{Type Grid}">
                        <Setter Property="ColumnDefinitions" Value="80,*,20" />
                    </Style>
                    <Style TargetType="{Type Label}">
                        <Setter Property="Grid.Column" Value="0" />
                        <Setter Property="FontAttributes" Value="Bold" />
                        <Setter Property="VerticalOptions" Value="Center" />
                    </Style>
                    <Style TargetType="{Type Picker}">
                        <Setter Property="Grid.Column" Value="1" />
                        <Setter Property="FontSize" Value="13" />
                    </Style>
                    <Style
                        x:Key="ibtnIcon"
                        BasedOn="{StaticResource imgBtnTinted}"
                        TargetType="{x:Type ImageButton}">
                        <Setter Property="Grid.Column" Value="2" />
                        <Setter Property="Source" Value="clear.svg" />
                        <Setter Property="WidthRequest" Value="20" />
                        <Setter Property="HeightRequest" Value="20" />
                        <Setter Property="HorizontalOptions" Value="Center" />
                    </Style>
                </VerticalStackLayout.Resources>

                <Frame Padding="10,0">
                    <Grid ColumnDefinitions="Auto,*">
                        <!--  tile switch  -->
                        <Label Text="Large Tiles" />
                        <Switch
                            x:Name="swTileSize"
                            Grid.Column="1"
                            HorizontalOptions="Start"
                            IsToggled="True"
                            Toggled="switch_Toggled" />
                    </Grid>
                </Frame>

                <!--  filters  -->
                <Frame>
                    <Grid>
                        <Label Text="Log Levels" />
                        <Picker
                            x:Name="pckLevels"
                            Title="Levels"
                            ItemsSource="{Binding Levels}"
                            SelectedItem="{Binding Level}" />
                        <ImageButton
                            Command="{Binding ClearLevelCommand}"
                            IsVisible="{Binding Level, Converter={StaticResource NoneToVisible}}"
                            Style="{StaticResource ibtnIcon}" />
                    </Grid>
                </Frame>
                <Frame>
                    <Grid>
                        <Label Text="Classes" />
                        <Picker
                            x:Name="pckClasses"
                            Title="Classes"
                            ItemsSource="{Binding Classes}"
                            SelectedItem="{Binding ClassName}" />
                        <ImageButton
                            Command="{Binding ClearClassCommand}"
                            IsVisible="{Binding ClassName, Converter={StaticResource NullToVisible}}"
                            Style="{StaticResource ibtnIcon}" />
                    </Grid>
                </Frame>
                <Frame>
                    <Grid>
                        <Label Text="Exceptions" />
                        <Picker
                            x:Name="pckExceptions"
                            Title="Exceptions"
                            ItemsSource="{Binding Exceptions}"
                            SelectedItem="{Binding ExceptionType}" />
                        <ImageButton
                            Command="{Binding ClearExceptionCommand}"
                            IsVisible="{Binding ExceptionType, Converter={StaticResource NullToVisible}}"
                            Style="{StaticResource ibtnIcon}" />
                    </Grid>
                </Frame>

            </VerticalStackLayout>
        </toolkit:Expander>

        <!--  list  -->
        <Frame
            Grid.Row="1"
            Margin="0,5,0,0"
            Padding="0"
            BackgroundColor="{AppThemeBinding Light={StaticResource White},
                                              Dark={StaticResource Gray900}}">
            <sf:SfListView
                x:Name="listview"
                ItemSpacing="1"
                ItemTemplate="{StaticResource LogDataTemplateSelector}"
                ItemsSource="{Binding LoadedLogs}"
                LoadMoreCommand="{Binding LoadMoreItemsCommand}"
                LoadMoreOption="None"
                LoadMorePosition="End"
                ScrollBarVisibility="Always">
                <sf:SfListView.EmptyView>
                    <Label
                        Margin="0,10"
                        HorizontalTextAlignment="Center"
                        Text="No Logs Found" />
                </sf:SfListView.EmptyView>
            </sf:SfListView>
        </Frame>
    </Grid>

</ContentPage>
